{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../shared/dishes';\nimport { baseUrl } from '../shared/baseUrl';\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }\n}); // dispatching dishes:-\n\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + 'dishes').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error' + response.status);\n      error.response = response;\n      throw error;\n    }\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes)));\n};\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n}); //dispatching comments:-\n\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => response.json()).then(comments => dispatch(addComments(comments)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + 'promotions').then(response => response.json()).then(promos => dispatch(addPromos(promos)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});","map":{"version":3,"sources":["/Users/manishachoudhary/Desktop/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","DISHES","baseUrl","addComment","dishId","rating","author","comment","type","ADD_COMMENT","payload","fetchDishes","dispatch","dishesLoading","fetch","then","response","ok","error","Error","status","json","dishes","addDishes","DISHES_LOADING","dishesFailed","errmess","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","PROMOS_LOADING","promosFailed","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\nimport {DISHES} from '../shared/dishes';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nexport const addComment = (dishId, rating, author, comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n});\n\n // dispatching dishes:-\n\n\nexport const fetchDishes = () => (dispatch) => {\n        dispatch(dishesLoading(true));\n\n        return fetch(baseUrl + 'dishes')\n        .then (response =>{\n            if(response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error' + response.status )\n                error.response=response;\n                throw error;  \n            }\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)));\n}\n\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\n\n\n\nexport const dishesFailed = (errmess) => ({\n    type : ActionTypes.DISHES_FAILED,\n    payload : errmess\n});\n\n\n\nexport const addDishes = (dishes) =>({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n\n\n//dispatching comments:-\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + 'comments')\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});"]},"metadata":{},"sourceType":"module"}