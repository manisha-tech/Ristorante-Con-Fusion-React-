{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Leaders } from './leaders';\nimport { Promotions } from './promotions';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\nexport const ConfigureStore = () => {\n  const store = createStore(combineReducers({\n    dishes: Dishes,\n    comments: Comments,\n    leaders: Leaders,\n    promotions: Promotions,\n    ...createForms({\n      feedback: InitialFeedback\n    })\n  }), applyMiddleware(thunk, logger));\n  return store;\n};","map":{"version":3,"sources":["/Users/manishachoudhary/Desktop/confusion/src/redux/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","createForms","Dishes","Comments","Leaders","Promotions","thunk","logger","InitialFeedback","ConfigureStore","store","dishes","comments","leaders","promotions","feedback"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAAOC,WAAP,QAAyB,kBAAzB;AACA,SAASC,MAAT,QAAwB,UAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,OAAT,QAAyB,WAAzB;AACA,SAASC,UAAT,QAA4B,cAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,eAAT,QAAgC,SAAhC;AAIA,OAAO,MAAMC,cAAc,GAAE,MAAM;AAC/B,QAAMC,KAAK,GAAGZ,WAAW,CACnBC,eAAe,CAAC;AACZY,IAAAA,MAAM,EAAET,MADI;AAEZU,IAAAA,QAAQ,EAAET,QAFE;AAGZU,IAAAA,OAAO,EAAET,OAHG;AAIZU,IAAAA,UAAU,EAAET,UAJA;AAKZ,OAAGJ,WAAW,CAAC;AACXc,MAAAA,QAAQ,EAAEP;AADC,KAAD;AALF,GAAD,CADI,EAUnBR,eAAe,CAAEM,KAAF,EAAQC,MAAR,CAVI,CAAzB;AAYA,SAAOG,KAAP;AACH,CAdM","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport{createForms} from 'react-redux-form';\nimport { Dishes } from  './dishes';\nimport { Comments} from  './comments';\nimport { Leaders } from  './leaders';\nimport { Promotions } from  './promotions';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\n\n\nexport const ConfigureStore =() => {\n    const store = createStore(\n          combineReducers({\n              dishes: Dishes,\n              comments: Comments,\n              leaders: Leaders,\n              promotions: Promotions,\n              ...createForms({\n                  feedback: InitialFeedback\n          })\n        }),\n          applyMiddleware (thunk,logger)\n    );\n    return store;\n}"]},"metadata":{},"sourceType":"module"}