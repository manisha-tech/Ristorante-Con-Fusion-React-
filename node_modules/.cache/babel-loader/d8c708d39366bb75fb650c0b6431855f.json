{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Dishes = (state = {\n  isLoading: true,\n  errmess: null,\n  dishes: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_DISHES:\n      return { ...state,\n        isLoading: false,\n        errmess: null,\n        dishes: action.payload\n      };\n\n    case ActionTypes.DISHES_LOADING:\n      return { ...state,\n        isLoading: true,\n        errmess: null,\n        dishes: []\n      };\n\n    case ActionTypes.DISHES_FAILED:\n      return { ...state,\n        isLoading: false,\n        errmess: action.payload,\n        dishes: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/manishachoudhary/Desktop/confusion/src/redux/dishes.js"],"names":["ActionTypes","Dishes","state","isLoading","errmess","dishes","action","type","ADD_DISHES","payload","DISHES_LOADING","DISHES_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAGA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAC;AACzBC,EAAAA,SAAS,EAAE,IADc;AAEzBC,EAAAA,OAAO,EAAE,IAFgB;AAGzBC,EAAAA,MAAM,EAAE;AAHiB,CAAP,EAIXC,MAJW,KAID;AAEZ,UAAOA,MAAM,CAACC,IAAd;AAEG,SAAKP,WAAW,CAACQ,UAAjB;AACI,aAAO,EAAC,GAAGN,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,MAAM,EAACC,MAAM,CAACG;AAA1D,OAAP;;AAIJ,SAAKT,WAAW,CAACU,cAAjB;AACO,aAAO,EAAC,GAAGR,KAAJ;AAAWC,QAAAA,SAAS,EAAE,IAAtB;AAA4BC,QAAAA,OAAO,EAAE,IAArC;AAA2CC,QAAAA,MAAM,EAAE;AAAnD,OAAP;;AAIP,SAAKL,WAAW,CAACW,aAAjB;AACI,aAAO,EAAC,GAAGT,KAAJ;AAAWC,QAAAA,SAAS,EAAE,KAAtB;AAA6BC,QAAAA,OAAO,EAACE,MAAM,CAACG,OAA5C;AAAqDJ,QAAAA,MAAM,EAAE;AAA7D,OAAP;;AACJ;AACI,aAAOH,KAAP;AAfP;AAkBR,CAxBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\n\n\nexport const Dishes = (state={\n    isLoading :true,\n    errmess :null,\n    dishes: []        \n        }, action) =>{\n\n         switch(action.type) {\n \n            case ActionTypes.ADD_DISHES:\n                return {...state, isLoading :false, errmess: null, dishes:action.payload};\n\n\n\n            case ActionTypes.DISHES_LOADING:\n                   return {...state, isLoading :true, errmess: null, dishes: []}\n\n\n\n            case ActionTypes.DISHES_FAILED:\n                return {...state, isLoading :false, errmess:action.payload, dishes: []}\n            default:\n                return state;\n         }\n         \n};"]},"metadata":{},"sourceType":"module"}